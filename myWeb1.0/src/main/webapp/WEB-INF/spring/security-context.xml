<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
        
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<beans:bean id="dataSource"
         class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
         <beans:property name="driverClass" value="oracle.jdbc.OracleDriver" />
         <beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
         <beans:property name="username" value="egov" />
         <beans:property name="password" value="egov" />
    </beans:bean>
    
    <beans:bean id="authJdbcService" 
    	  		class="com.javateam.service.AuthJdbcService">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>
    
    <!-- 자체 provider 사용한 sercurity -->
    <!-- enable use-expressions -->
<!-- 	<http auto-config="true" use-expressions="true">

		<headers>
			<cache-control />
		</headers>

		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/secure/**" access="hasRole('ROLE_USER')" />
			
		<form-login login-page="/login" 
				    default-target-url="/welcome"
					authentication-failure-url="/login/login?error" 
					username-parameter="userid"
					password-parameter="userpw" 
					login-processing-url="/auth/login_check" />			

		<logout logout-success-url="/login/login?logout" 
				delete-cookies="JSESSIONID" />
				
		<csrf />

	</http>
	
	Select users and user_roles from database
	<authentication-manager>
		<authentication-provider>
		    <password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select userid, userpw, enabled from users where userid=?"
				authorities-by-username-query="select user_id, role from users_role where user_id =?" />
		</authentication-provider>
	</authentication-manager>
  
	<beans:bean id="encoder" 
				class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="20" />
	</beans:bean>  -->
	
	<!-- customprovider 사용한 security -->

    <http auto-config="true"
          use-expressions="true">
   
        <headers>
            <cache-control />
        </headers>
   
        <intercept-url pattern="/secured/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
       
        <form-login login-page="/login"
                    default-target-url="/welcome"
                    authentication-failure-url="/login/loginError" />
         
        <logout logout-success-url="/login/logout"
                delete-cookies="JSESSIONID" />             
           
        <access-denied-handler error-page="/access-denied" />
       
        <session-management>
            <concurrency-control max-sessions="1"
                                 error-if-maximum-exceeded="true" />
        </session-management>
       
    </http>
    
    <authentication-manager erase-credentials="true">
          <authentication-provider ref="customProvider" />
    </authentication-manager> 
	
   	<beans:bean id="customProvider" 
				class="com.javateam.service.CustomProvider">
        <beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="20" />
    </beans:bean>  	 
		
</beans:beans>
